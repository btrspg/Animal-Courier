{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230 Animal-Courier \u8fd9\u53ea\u662f\u4e00\u4e2a\u811a\u672c\u5e76\u884c\u63a7\u5236\u7a0b\u5e8f\u3002\u9002\u7528\u4e8e\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u5462\uff1f\u4e3e\u4e24\u4e2a\u4f8b\u5b50\uff1a \u672c\u5730\u8fd0\u884c\u8017\u65f6\u8f83\u957f\uff0c\u8d44\u6e90\u6d88\u8017\u4e00\u822c\uff0c\u4f46\u6570\u91cf\u8f83\u591a\u7684\u60c5\u51b5 \u8fd9\u5c31\u597d\u6bd4\uff0c\u6211\u60f3\u5728\u672c\u5730\u8fd0\u884c bwa \u6765\u8fdb\u884c\u6bd4\u5bf9\uff0c\u800c\u6211\u5df2\u77e5 bwa \u6bd4\u5bf9\u53ef\u80fd\u7528\u5230\u7684\u8d44\u6e90\u5927\u6982\u662f\u672c\u673a\u7684\u4e94\u5206\u4e4b\u4e00\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u6211\u53ef\u4ee5\u5e76\u884c\uff0c\u800c\u4e14\u5e76\u884c4\u4e2a\u662f\u80af\u5b9a\u6ca1\u6709\u95ee\u9898\u3002\u4f46\u662f \u6211\u53c8\u670950\u4e2a\u6837\u672c\u9700\u8981\u8dd1\uff0c\u5f53\u7136\u5c31\u6bd4\u8f83\u5e0c\u671b\u80fd\u591f\u540c\u65f6\u8dd14\u4e2a\uff0c\u76f4\u523050\u4e2a\u6837\u672c\u90fd\u6bd4\u5bf9\u5b8c\u3002\uff08\u4e00\u822c\u811a\u672c\u9700\u8981\u7528for\u4e00\u4e2a\u4e00\u4e2a\u8dd1\uff0c\u5c31\u662f\u540c\u65f6\u53ea\u80fd\u8dd1\u4e00\u4e2a\uff1b\u6216\u8005\u5168\u90e8\u7528nohup\u6295\u9012\u5230 \u540e\u53f0\uff0c\u4f46\u540c\u65f6\u8dd150\u4e2a\u673a\u5668\u53c8\u53d7\u4e0d\u4e86\uff09 \u60f3\u8981\u5927\u6982\u4f30\u8ba1\u4e00\u4e0b\u67d0\u4e9b\u811a\u672c\u7684\u8d44\u6e90\u6d88\u8017\uff08\u76ee\u524d\u53ea\u652f\u6301RSS\uff09 \u6bd4\u5982\uff0cRNA-seq\u6570\u636e\u6bd4\u5bf9\u6709\u90a3\u4e48\u591a\u8f6f\u4ef6\uff0c\u90a3\u4e48\u54ea\u79cd\u6bd4\u8f83\u9002\u5408\u81ea\u5df1\u7684\u673a\u5668\u8fd0\u884c\uff08\u8003\u8651\u7684\u56e0\u7d20\u5e94\u8be5\u5f88\u591a\uff0c\u4f46\u662f\u73b0\u5728\u53ea\u662f\u60f3\u770b\u770b\u5979\u4eec\u7684\u8fd0\u884c\u65f6\u95f4\u53ca\u5185\u5b58\u6d88\u8017\u60c5\u51b5\uff0c\u770b\u770b\u54ea\u79cd\u66f4 \u9002\u5408\uff09\uff0c\u5c31\u53ef\u4ee5\u9002\u7528\u672c\u7a0b\u5e8f\u7684 --profile \u6765\u8fdb\u884c\u7edf\u8ba1\uff0c\u540c\u65f6\u7ed9\u51fa\u53ef\u89c6\u5316\u7ed3\u679c\uff0c\u65b9\u4fbf\u67e5\u770b\u3002 \u5b89\u88c5 Conda(\u63a8\u8350) conda install -r btrspg animal-courier \u624b\u52a8\u5b89\u88c5 wget https://github.com/dota2-BioTools/Animal-Courier/archive/v0.1.4.alpha.tar.gz tar -zxvf v0.1.4.alpha.tar.gz cd v0.1.4.alpha python setup.py install or install the development pip install git+https://github.com/dota2-BioTools/Animal-Courier.git \u4f7f\u7528\u65b9\u6cd5 multi_run.py -h optional arguments: -h, --help show this help message and exit --shell SHELL shell scripts (default: None) --thread THREAD thread number (default: 4) --work-name WORK_NAME logs name prefix (default: work) --profile If run profile for command(only RSS) (default: False) --interval INTERVAL If profile set True, please set interval(seconds) of the memory stats (default: 10) shell \u60f3\u8981\u8fdb\u884c\u5e76\u884c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u4e00\u884c\u4e00\u4e2a\u5b8c\u6574\u811a\u672c\uff0c\u5177\u4f53\u4f8b\u5b50\u5982\u4e0b\uff1a #bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam # this one would not be identify as a complete command. It would not run. bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam bwa mem test2.1.fq.gz test2.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test2.bam bwa mem test3.1.fq.gz test3.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test3.bam \u6ce8\u91ca\u7684\u4e0d\u4f1a\u5f53\u4f5c\u547d\u4ee4 \u5047\u8bbe\u9700\u8981\u8fd0\u884c\u591a\u4e2a\u6b65\u9aa4\u7684\uff0c\u63a8\u8350\u9002\u7528 ; \u8fdb\u884c\u8fde\u63a5 bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam;samtools index test1.bam thread \u540c\u65f6\u8fd0\u884c\u4efb\u52a1\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a4\u4e2a\u3002 work-name \u6bcf\u884c\u547d\u4ee4\u90fd\u4f1a\u91cd\u65b0\u5206\u5272\u6210\u5355\u72ec\u7684 shell \u811a\u672c\uff0c\u8fd9\u4e2a\u811a\u672c\u4f1a\u4ee5 work-name \u4e3a\u524d\u7f00\uff0c\u5e76\u4e14\u6574\u4e2a\u811a\u672c\u5b8c\u6574log\u4e5f\u4f1a\u4ee5 work-name \u4e3a\u524d\u7f00\u3002\u9ed8\u8ba4\uff1a work \u4f8b\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684test.sh\u5c31\u4f1a\u88ab\u62c6\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u811a\u672c\uff1a work.0001.sh #! /bin/bash bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam work.0002.sh #! /bin/bash bwa mem test2.1.fq.gz test2.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test2.bam work.0003.sh #! /bin/bash bwa mem test3.1.fq.gz test3.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test3.bam profile \u662f\u5426\u9700\u8981\u8fdb\u884c\u5185\u5b58\u7edf\u8ba1\uff0c\u9ed8\u8ba4\u4e0d\u8fdb\u884c\u7edf\u8ba1\u3002 interval \u5185\u5b58\u7edf\u8ba1\u95f4\u9694\u65f6\u95f4\uff0c\u5982\u679c\u5f00\u542f profile \u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u65f6\u95f4\u95f4\u9694\u4e3a10\u79d2\u3002\u6839\u636e\u8fd0\u884c\u811a\u672c\u5408\u7406\u8bbe\u7f6e\u95f4\u9694\u65f6\u95f4\u3002 \u4f8b\u5b50 test.sh perl -e 'for($i=0;$i<200000;$i++){$hash{$i}=$i;}' perl -e 'for($i=0;$i<2000000;$i++){$hash{$i}=$i;}' perl -e 'for($i=0;$i<20000000;$i++){$hash{$i}=$i;}' multi_run.py --shell test.sh --thread 4 --profile --interval 1 \u7ed3\u679c standard out 2019-01-12 00:01:46,004 multi_run.py [INFO] Get command args, and args are :test.sh 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437972:work0002... 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437970:work0001... 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437971:work0003... 2019-01-12 00:02:02,711 psopen.py [INFO] finished 437972:work0002... 2019-01-12 00:02:02,736 psopen.py [INFO] finished 437970:work0001... 2019-01-12 00:02:21,234 psopen.py [INFO] finished 437971:work0003... 2019-01-12 00:02:21,291 multi_run.py [INFO] Stats time of work 2019-01-12 00:02:21,296 multi_run.py [INFO] Stats profiles 2019-01-12 00:02:26,182 multi_run.py [INFO] ALL FINISHED!! ============================================================ Time(mins) Work Profile 0 0.27 work0001 ./log.work.20190112000145/work0001//work0001.4... 1 0.27 work0002 ./log.work.20190112000145/work0002//work0002.4... 2 0.58 work0003 ./log.work.20190112000145/work0003//work0003.4... ============================================================ count 3.000000 mean 0.373333 std 0.178979 min 0.270000 25% 0.270000 50% 0.270000 75% 0.425000 max 0.580000 \u6700\u7ec8\u751f\u6210\u7684log\u7684\u76ee\u5f55\u7ed3\u6784 \u5f00\u542f profile \u53c2\u6570\u540e\uff0c\u8fdb\u884c\u7684\u5185\u5b58\u7edf\u8ba1\u7ed3\u679c\uff08\u70b9\u51fb\u56fe\u7247\u53ef\u4ea4\u4e92\uff09","title":"Home"},{"location":"#animal-courier","text":"\u8fd9\u53ea\u662f\u4e00\u4e2a\u811a\u672c\u5e76\u884c\u63a7\u5236\u7a0b\u5e8f\u3002\u9002\u7528\u4e8e\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u5462\uff1f\u4e3e\u4e24\u4e2a\u4f8b\u5b50\uff1a \u672c\u5730\u8fd0\u884c\u8017\u65f6\u8f83\u957f\uff0c\u8d44\u6e90\u6d88\u8017\u4e00\u822c\uff0c\u4f46\u6570\u91cf\u8f83\u591a\u7684\u60c5\u51b5 \u8fd9\u5c31\u597d\u6bd4\uff0c\u6211\u60f3\u5728\u672c\u5730\u8fd0\u884c bwa \u6765\u8fdb\u884c\u6bd4\u5bf9\uff0c\u800c\u6211\u5df2\u77e5 bwa \u6bd4\u5bf9\u53ef\u80fd\u7528\u5230\u7684\u8d44\u6e90\u5927\u6982\u662f\u672c\u673a\u7684\u4e94\u5206\u4e4b\u4e00\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u6211\u53ef\u4ee5\u5e76\u884c\uff0c\u800c\u4e14\u5e76\u884c4\u4e2a\u662f\u80af\u5b9a\u6ca1\u6709\u95ee\u9898\u3002\u4f46\u662f \u6211\u53c8\u670950\u4e2a\u6837\u672c\u9700\u8981\u8dd1\uff0c\u5f53\u7136\u5c31\u6bd4\u8f83\u5e0c\u671b\u80fd\u591f\u540c\u65f6\u8dd14\u4e2a\uff0c\u76f4\u523050\u4e2a\u6837\u672c\u90fd\u6bd4\u5bf9\u5b8c\u3002\uff08\u4e00\u822c\u811a\u672c\u9700\u8981\u7528for\u4e00\u4e2a\u4e00\u4e2a\u8dd1\uff0c\u5c31\u662f\u540c\u65f6\u53ea\u80fd\u8dd1\u4e00\u4e2a\uff1b\u6216\u8005\u5168\u90e8\u7528nohup\u6295\u9012\u5230 \u540e\u53f0\uff0c\u4f46\u540c\u65f6\u8dd150\u4e2a\u673a\u5668\u53c8\u53d7\u4e0d\u4e86\uff09 \u60f3\u8981\u5927\u6982\u4f30\u8ba1\u4e00\u4e0b\u67d0\u4e9b\u811a\u672c\u7684\u8d44\u6e90\u6d88\u8017\uff08\u76ee\u524d\u53ea\u652f\u6301RSS\uff09 \u6bd4\u5982\uff0cRNA-seq\u6570\u636e\u6bd4\u5bf9\u6709\u90a3\u4e48\u591a\u8f6f\u4ef6\uff0c\u90a3\u4e48\u54ea\u79cd\u6bd4\u8f83\u9002\u5408\u81ea\u5df1\u7684\u673a\u5668\u8fd0\u884c\uff08\u8003\u8651\u7684\u56e0\u7d20\u5e94\u8be5\u5f88\u591a\uff0c\u4f46\u662f\u73b0\u5728\u53ea\u662f\u60f3\u770b\u770b\u5979\u4eec\u7684\u8fd0\u884c\u65f6\u95f4\u53ca\u5185\u5b58\u6d88\u8017\u60c5\u51b5\uff0c\u770b\u770b\u54ea\u79cd\u66f4 \u9002\u5408\uff09\uff0c\u5c31\u53ef\u4ee5\u9002\u7528\u672c\u7a0b\u5e8f\u7684 --profile \u6765\u8fdb\u884c\u7edf\u8ba1\uff0c\u540c\u65f6\u7ed9\u51fa\u53ef\u89c6\u5316\u7ed3\u679c\uff0c\u65b9\u4fbf\u67e5\u770b\u3002","title":"\u6b22\u8fce\u6765\u5230 Animal-Courier"},{"location":"#_1","text":"","title":"\u5b89\u88c5"},{"location":"#conda","text":"conda install -r btrspg animal-courier","title":"Conda(\u63a8\u8350)"},{"location":"#_2","text":"wget https://github.com/dota2-BioTools/Animal-Courier/archive/v0.1.4.alpha.tar.gz tar -zxvf v0.1.4.alpha.tar.gz cd v0.1.4.alpha python setup.py install or install the development pip install git+https://github.com/dota2-BioTools/Animal-Courier.git","title":"\u624b\u52a8\u5b89\u88c5"},{"location":"#_3","text":"multi_run.py -h optional arguments: -h, --help show this help message and exit --shell SHELL shell scripts (default: None) --thread THREAD thread number (default: 4) --work-name WORK_NAME logs name prefix (default: work) --profile If run profile for command(only RSS) (default: False) --interval INTERVAL If profile set True, please set interval(seconds) of the memory stats (default: 10)","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"#shell","text":"\u60f3\u8981\u8fdb\u884c\u5e76\u884c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u4e00\u884c\u4e00\u4e2a\u5b8c\u6574\u811a\u672c\uff0c\u5177\u4f53\u4f8b\u5b50\u5982\u4e0b\uff1a #bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam # this one would not be identify as a complete command. It would not run. bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam bwa mem test2.1.fq.gz test2.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test2.bam bwa mem test3.1.fq.gz test3.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test3.bam","title":"shell"},{"location":"#_4","text":"\u5047\u8bbe\u9700\u8981\u8fd0\u884c\u591a\u4e2a\u6b65\u9aa4\u7684\uff0c\u63a8\u8350\u9002\u7528 ; \u8fdb\u884c\u8fde\u63a5 bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam;samtools index test1.bam","title":"\u6ce8\u91ca\u7684\u4e0d\u4f1a\u5f53\u4f5c\u547d\u4ee4"},{"location":"#thread","text":"\u540c\u65f6\u8fd0\u884c\u4efb\u52a1\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a4\u4e2a\u3002","title":"thread"},{"location":"#work-name","text":"\u6bcf\u884c\u547d\u4ee4\u90fd\u4f1a\u91cd\u65b0\u5206\u5272\u6210\u5355\u72ec\u7684 shell \u811a\u672c\uff0c\u8fd9\u4e2a\u811a\u672c\u4f1a\u4ee5 work-name \u4e3a\u524d\u7f00\uff0c\u5e76\u4e14\u6574\u4e2a\u811a\u672c\u5b8c\u6574log\u4e5f\u4f1a\u4ee5 work-name \u4e3a\u524d\u7f00\u3002\u9ed8\u8ba4\uff1a work \u4f8b\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684test.sh\u5c31\u4f1a\u88ab\u62c6\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u811a\u672c\uff1a work.0001.sh #! /bin/bash bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam work.0002.sh #! /bin/bash bwa mem test2.1.fq.gz test2.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test2.bam work.0003.sh #! /bin/bash bwa mem test3.1.fq.gz test3.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test3.bam","title":"work-name"},{"location":"#profile","text":"\u662f\u5426\u9700\u8981\u8fdb\u884c\u5185\u5b58\u7edf\u8ba1\uff0c\u9ed8\u8ba4\u4e0d\u8fdb\u884c\u7edf\u8ba1\u3002","title":"profile"},{"location":"#interval","text":"\u5185\u5b58\u7edf\u8ba1\u95f4\u9694\u65f6\u95f4\uff0c\u5982\u679c\u5f00\u542f profile \u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u65f6\u95f4\u95f4\u9694\u4e3a10\u79d2\u3002\u6839\u636e\u8fd0\u884c\u811a\u672c\u5408\u7406\u8bbe\u7f6e\u95f4\u9694\u65f6\u95f4\u3002","title":"interval"},{"location":"#_5","text":"test.sh perl -e 'for($i=0;$i<200000;$i++){$hash{$i}=$i;}' perl -e 'for($i=0;$i<2000000;$i++){$hash{$i}=$i;}' perl -e 'for($i=0;$i<20000000;$i++){$hash{$i}=$i;}' multi_run.py --shell test.sh --thread 4 --profile --interval 1","title":"\u4f8b\u5b50"},{"location":"#_6","text":"standard out 2019-01-12 00:01:46,004 multi_run.py [INFO] Get command args, and args are :test.sh 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437972:work0002... 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437970:work0001... 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437971:work0003... 2019-01-12 00:02:02,711 psopen.py [INFO] finished 437972:work0002... 2019-01-12 00:02:02,736 psopen.py [INFO] finished 437970:work0001... 2019-01-12 00:02:21,234 psopen.py [INFO] finished 437971:work0003... 2019-01-12 00:02:21,291 multi_run.py [INFO] Stats time of work 2019-01-12 00:02:21,296 multi_run.py [INFO] Stats profiles 2019-01-12 00:02:26,182 multi_run.py [INFO] ALL FINISHED!! ============================================================ Time(mins) Work Profile 0 0.27 work0001 ./log.work.20190112000145/work0001//work0001.4... 1 0.27 work0002 ./log.work.20190112000145/work0002//work0002.4... 2 0.58 work0003 ./log.work.20190112000145/work0003//work0003.4... ============================================================ count 3.000000 mean 0.373333 std 0.178979 min 0.270000 25% 0.270000 50% 0.270000 75% 0.425000 max 0.580000 \u6700\u7ec8\u751f\u6210\u7684log\u7684\u76ee\u5f55\u7ed3\u6784 \u5f00\u542f profile \u53c2\u6570\u540e\uff0c\u8fdb\u884c\u7684\u5185\u5b58\u7edf\u8ba1\u7ed3\u679c\uff08\u70b9\u51fb\u56fe\u7247\u53ef\u4ea4\u4e92\uff09","title":"\u7ed3\u679c"},{"location":"English/","text":"Welcome to Animal-Courier This is for shell scripts run in parallel. Install Conda(recommend) conda install -r btrspg animal-courier Manual wget https://github.com/dota2-BioTools/Animal-Courier/archive/v0.1.4.alpha.tar.gz tar -zxvf v0.1.4.alpha.tar.gz cd v0.1.4.alpha python setup.py install or install the development pip install git+https://github.com/dota2-BioTools/Animal-Courier.git Usage multi_run.py -h optional arguments: -h, --help show this help message and exit --shell SHELL shell scripts (default: None) --thread THREAD thread number (default: 4) --work-name WORK_NAME logs name prefix (default: work) --profile If run profile for command(only RSS) (default: False) --interval INTERVAL If profile set True, please set interval(seconds) of the memory stats (default: 10) shell This is a shell script. Every line in the script is a complete command. For example, a script like this: #bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam # this one would not be identify as a complete command. It would not run. bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam bwa mem test2.1.fq.gz test2.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test2.bam bwa mem test3.1.fq.gz test3.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test3.bam thread How many workers to run the scripts. work-name Every command line would generate a separate shell script. As mention above, there would be three shell scripts named: work.0001.sh #! /bin/bash bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam work.0002.sh #! /bin/bash bwa mem test2.1.fq.gz test2.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test2.bam and work.0003.sh profile tofill interval tofill Example test.sh perl -e 'for($i=0;$i<200000;$i++){$hash{$i}=$i;}' perl -e 'for($i=0;$i<2000000;$i++){$hash{$i}=$i;}' perl -e 'for($i=0;$i<20000000;$i++){$hash{$i}=$i;}' multi_run.py --shell test.sh --thread 4 --profile --interval 1 Results standard out 2019-01-12 00:01:46,004 multi_run.py [INFO] Get command args, and args are :test.sh 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437972:work0002... 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437970:work0001... 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437971:work0003... 2019-01-12 00:02:02,711 psopen.py [INFO] finished 437972:work0002... 2019-01-12 00:02:02,736 psopen.py [INFO] finished 437970:work0001... 2019-01-12 00:02:21,234 psopen.py [INFO] finished 437971:work0003... 2019-01-12 00:02:21,291 multi_run.py [INFO] Stats time of work 2019-01-12 00:02:21,296 multi_run.py [INFO] Stats profiles 2019-01-12 00:02:26,182 multi_run.py [INFO] ALL FINISHED!! ============================================================ Time(mins) Work Profile 0 0.27 work0001 ./log.work.20190112000145/work0001//work0001.4... 1 0.27 work0002 ./log.work.20190112000145/work0002//work0002.4... 2 0.58 work0003 ./log.work.20190112000145/work0003//work0003.4... ============================================================ count 3.000000 mean 0.373333 std 0.178979 min 0.270000 25% 0.270000 50% 0.270000 75% 0.425000 max 0.580000 structure log","title":"Welcome to Animal-Courier"},{"location":"English/#welcome-to-animal-courier","text":"This is for shell scripts run in parallel.","title":"Welcome to Animal-Courier"},{"location":"English/#install","text":"","title":"Install"},{"location":"English/#condarecommend","text":"conda install -r btrspg animal-courier","title":"Conda(recommend)"},{"location":"English/#manual","text":"wget https://github.com/dota2-BioTools/Animal-Courier/archive/v0.1.4.alpha.tar.gz tar -zxvf v0.1.4.alpha.tar.gz cd v0.1.4.alpha python setup.py install or install the development pip install git+https://github.com/dota2-BioTools/Animal-Courier.git","title":"Manual"},{"location":"English/#usage","text":"multi_run.py -h optional arguments: -h, --help show this help message and exit --shell SHELL shell scripts (default: None) --thread THREAD thread number (default: 4) --work-name WORK_NAME logs name prefix (default: work) --profile If run profile for command(only RSS) (default: False) --interval INTERVAL If profile set True, please set interval(seconds) of the memory stats (default: 10)","title":"Usage"},{"location":"English/#shell","text":"This is a shell script. Every line in the script is a complete command. For example, a script like this: #bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam # this one would not be identify as a complete command. It would not run. bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam bwa mem test2.1.fq.gz test2.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test2.bam bwa mem test3.1.fq.gz test3.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test3.bam","title":"shell"},{"location":"English/#thread","text":"How many workers to run the scripts.","title":"thread"},{"location":"English/#work-name","text":"Every command line would generate a separate shell script. As mention above, there would be three shell scripts named: work.0001.sh #! /bin/bash bwa mem test1.1.fq.gz test1.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test1.bam work.0002.sh #! /bin/bash bwa mem test2.1.fq.gz test2.2.fq.gz reference.fasta | samtools view -bSt reference.fasta.fai -o test2.bam and work.0003.sh","title":"work-name"},{"location":"English/#profile","text":"tofill","title":"profile"},{"location":"English/#interval","text":"tofill","title":"interval"},{"location":"English/#example","text":"test.sh perl -e 'for($i=0;$i<200000;$i++){$hash{$i}=$i;}' perl -e 'for($i=0;$i<2000000;$i++){$hash{$i}=$i;}' perl -e 'for($i=0;$i<20000000;$i++){$hash{$i}=$i;}' multi_run.py --shell test.sh --thread 4 --profile --interval 1","title":"Example"},{"location":"English/#results","text":"standard out 2019-01-12 00:01:46,004 multi_run.py [INFO] Get command args, and args are :test.sh 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437972:work0002... 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437970:work0001... 2019-01-12 00:01:46,343 psopen.py [INFO] now workon 437971:work0003... 2019-01-12 00:02:02,711 psopen.py [INFO] finished 437972:work0002... 2019-01-12 00:02:02,736 psopen.py [INFO] finished 437970:work0001... 2019-01-12 00:02:21,234 psopen.py [INFO] finished 437971:work0003... 2019-01-12 00:02:21,291 multi_run.py [INFO] Stats time of work 2019-01-12 00:02:21,296 multi_run.py [INFO] Stats profiles 2019-01-12 00:02:26,182 multi_run.py [INFO] ALL FINISHED!! ============================================================ Time(mins) Work Profile 0 0.27 work0001 ./log.work.20190112000145/work0001//work0001.4... 1 0.27 work0002 ./log.work.20190112000145/work0002//work0002.4... 2 0.58 work0003 ./log.work.20190112000145/work0003//work0003.4... ============================================================ count 3.000000 mean 0.373333 std 0.178979 min 0.270000 25% 0.270000 50% 0.270000 75% 0.425000 max 0.580000 structure log","title":"Results"},{"location":"about/","text":"contact email: yuelong_chen@yahoo.com","title":"About"},{"location":"about/#contact","text":"email: yuelong_chen@yahoo.com","title":"contact"},{"location":"user-guide/","text":"","title":"User Guide"}]}